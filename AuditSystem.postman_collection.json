{
	"info": {
		"_postman_id": "e5c9f4a5-8b8c-4f8f-8f5a-5f8c8f5a5f8c",
		"name": "Retail Execution Audit System",
		"description": "API tests for the Retail Execution Audit System",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"organisationId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n    \"username\": \"testuser1\",\n    \"firstName\": \"Test\",\n    \"lastName\": \"User\",\n    \"email\": \"testuser1@example.com\",\n    \"phone\": \"1234567890\",\n    \"password\": \"Password123!\"\n}"
						},
						"url": {
							"raw": "http://localhost:5049/api/v1/Auth/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5049",
							"path": [
								"api",
								"v1",
								"Auth",
								"register"
							]
						},
						"description": "Register a new user"
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser1\",\n    \"password\": \"Password123!\"\n}"
						},
						"url": {
							"raw": "http://localhost:5049/api/v1/Auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5049",
							"path": [
								"api",
								"v1",
								"Auth",
								"login"
							]
						},
						"description": "Login to get JWT token"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for registration and login"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5049/api/v1/Users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5049",
							"path": [
								"api",
								"v1",
								"Users"
							]
						},
						"description": "Get all users (requires admin/manager role)"
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5049/api/v1/Users/3fa85f64-5717-4562-b3fc-2c963f66afa6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5049",
							"path": [
								"api",
								"v1",
								"Users",
								"3fa85f64-5717-4562-b3fc-2c963f66afa6"
							]
						},
						"description": "Get user by ID"
					},
					"response": []
				},
				{
					"name": "Get User by Username",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5049/api/v1/Users/by-username/testuser1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5049",
							"path": [
								"api",
								"v1",
								"Users",
								"by-username",
								"testuser1"
							]
						},
						"description": "Get user by username (requires admin/manager role)"
					},
					"response": []
				},
				{
					"name": "Create User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"organisationId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n    \"username\": \"testuser2\",\n    \"firstName\": \"Test\",\n    \"lastName\": \"User2\",\n    \"email\": \"testuser2@example.com\",\n    \"phone\": \"1234567891\",\n    \"role\": \"user\",\n    \"password\": \"Password123!\"\n}"
						},
						"url": {
							"raw": "http://localhost:5049/api/v1/Users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5049",
							"path": [
								"api",
								"v1",
								"Users"
							]
						},
						"description": "Create a new user (requires admin role)"
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n    \"firstName\": \"Updated\",\n    \"lastName\": \"User\",\n    \"email\": \"testuser1@example.com\",\n    \"phone\": \"1234567890\",\n    \"role\": \"user\",\n    \"isActive\": true\n}"
						},
						"url": {
							"raw": "http://localhost:5049/api/v1/Users/3fa85f64-5717-4562-b3fc-2c963f66afa6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5049",
							"path": [
								"api",
								"v1",
								"Users",
								"3fa85f64-5717-4562-b3fc-2c963f66afa6"
							]
						},
						"description": "Update user information (requires admin/manager role)"
					},
					"response": []
				},
				{
					"name": "Deactivate User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "http://localhost:5049/api/v1/Users/3fa85f64-5717-4562-b3fc-2c963f66afa6/deactivate",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5049",
							"path": [
								"api",
								"v1",
								"Users",
								"3fa85f64-5717-4562-b3fc-2c963f66afa6",
								"deactivate"
							]
						},
						"description": "Deactivate a user (requires admin role)"
					},
					"response": []
				},
				{
					"name": "Change Password",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"currentPassword\": \"Password123!\",\n    \"newPassword\": \"NewPassword123!\"\n}"
						},
						"url": {
							"raw": "http://localhost:5049/api/v1/Users/3fa85f64-5717-4562-b3fc-2c963f66afa6/change-password",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5049",
							"path": [
								"api",
								"v1",
								"Users",
								"3fa85f64-5717-4562-b3fc-2c963f66afa6",
								"change-password"
							]
						},
						"description": "Change user password"
					},
					"response": []
				}
			],
			"description": "User management endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-save JWT token from login response",
					"if (pm.response.code === 200 && pm.request.url.toString().includes('/api/v1/Auth/login')) {",
					"    var jsonData = pm.response.json();",
					"    if (jsonData.token) {",
					"        pm.environment.set('jwt_token', jsonData.token);",
					"        console.log('JWT token saved to environment variable');",
					"    }",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "jwt_token",
			"value": ""
		}
	]
} 